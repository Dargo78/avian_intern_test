1. CREATE TABLE purchases (
	purchase_id INT PRIMARY KEY AUTO_INCREMENT,
	customer_id INT,
	purchase_date DATE,
	total_price INT
)

CREATE TABLE customers (
    customer_id INT PRIMARY KEY AUTO_INCREMENT,
    customer_name varchar(20),
    customer_email varchar(30),
    customer_phone varchar(15),
    customer_address varchar(20)
);

ALTER TABLE purchases
ADD CONSTRAINT FK_purchase_customer
FOREIGN KEY (customer_id) REFERENCES customers(customer_id)

2. INSERT INTO customers
VALUES (1, 'John Doe', 'johndoe@example.com', '123-456-7890', '123 Main St Anytown USA')

INSERT INTO customers
VALUES
(2, 'Jane Doe', 'janedoe@example.com', '555-555-5555', '456 Elm St. Anytown USA'),
(3, 'Bob Smith', 'bobsmith@example.com', '987-654-3210', '789 Oak Ave, Anytown USA'),
(4, 'Paul Reyes', 'paulreyes@example.com', '678-123-4567', '731 North St. Anytown USA'),
(5, 'Billy Alexander', 'billyalexander@example.com', '777-888-9999', '332 South St. Anytown USA'),
(6, 'Marrie Anne', 'marrieanne@example.com', '895-348-3472', '332 West St. Anytown USA')

3. INSERT INTO purchases (customer_id, purchase_date, total_price)
VALUES
(1, '2022-01-15', 100)

INSERT INTO purchases (customer_id, purchase_date, total_price)
VALUES
(1, '2022-02-20', 150),
(2, '2022-03-05', 200),
(2, '2022-04-10', 75),
(2, '2022-06-15', 300),
(3, '2022-01-30', 50),
(3, '2022-05-01', 125),
(5, '2022-01-14', 275),
(2, '2022-01-07', 135),
(5, '2022-01-24', 225)

4. SELECT * FROM `customers` WHERE customer_name LIKE "%Doe%";

5. SELECT c.customer_id, c.customer_name, SUM(p.total_price) AS total_purchases FROM purchases p JOIN customers c ON (p.customer_id = c.customer_id) GROUP BY p.customer_id ORDER BY total_purchases DESC;

6. SELECT c.customer_id, c.customer_name, DATE_FORMAT(p.purchase_date, '%Y %M') AS period, p.total_price AS total_purchases FROM purchases p JOIN customers c ON (p.customer_id = c.customer_id) WHERE MONTH(p.purchase_date) = 1 AND YEAR(p.purchase_date) = 2022;

7. SELECT DATE_FORMAT(p.purchase_date, '%Y %M') AS period, AVG(p.total_price) AS total_purchases FROM purchases p JOIN customers c ON (p.customer_id = c.customer_id) GROUP BY MONTH(p.purchase_date);

8. SELECT c.customer_id, c.customer_name, c.customer_email, c.customer_phone, c.customer_address FROM purchases p RIGHT JOIN customers c ON (p.customer_id = c.customer_id) WHERE p.purchase_id IS NULL;

9. SELECT c.customer_id, c.customer_name, SUM(p.total_price) AS total_purchases FROM purchases p JOIN customers c ON (p.customer_id = c.customer_id) GROUP BY MONTH(p.purchase_date) HAVING SUM(p.total_price) > 500;

